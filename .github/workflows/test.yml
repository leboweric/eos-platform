name: Run Backend Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Service containers to run with the job
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eos_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Create test database and run migrations
      working-directory: ./backend
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/eos_test
      run: |
        # Create UUID extension if it doesn't exist
        PGPASSWORD=postgres psql -h localhost -U postgres -d eos_test -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"
        
        # Run the test schema setup
        PGPASSWORD=postgres psql -h localhost -U postgres -d eos_test -f src/tests/setup-test-schema.sql

    - name: Run tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/eos_test
        JWT_SECRET: test-jwt-secret-for-github-actions
        JWT_REFRESH_SECRET: test-jwt-refresh-secret-for-github-actions
        STRIPE_SECRET_KEY: sk_test_51234567890abcdefghijklmnopqrstuvwxyz
        STRIPE_WEBHOOK_SECRET: whsec_test_secret_for_github_actions
        # Email settings (using test values)
        EMAIL_SERVICE: smtp
        EMAIL_FROM: test@test.com
        SMTP_HOST: localhost
        SMTP_PORT: 1025
        SMTP_USER: test
        SMTP_PASS: test
        # Other test environment variables
        FRONTEND_URL: http://localhost:3000
      run: |
        npm test
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: backend/coverage/
        retention-days: 30